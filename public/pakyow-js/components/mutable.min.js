pw.component.register("mutable",function(view,config){var that=this;this.mutate=function(target){_.each(this.state.diff(target),function(diff){delete diff.node;var input={};var datum=_.clone(diff);delete datum.guid;delete datum.scope;delete datum.id;input[diff.scope]=datum;var message={action:"call_route",input:input};if(view.node.tagName==="FORM"){var method;var $methodOverride=view.node.querySelector('input[name="_method"]');if($methodOverride){method=$methodOverride.value}else{method=view.node.getAttribute("method")}message.method=method;message.uri=view.node.getAttribute("action")}else{}var self=this;window.socket.send(message,function(res){if(res.status===302&&res.headers.Location!==window.location.pathname){var dest=res.headers.Location;history.pushState({uri:dest},dest,dest);return}else if(res.status===400){}else{self.state.rollback(diff.guid)}pw.component.push({channel:"response:received",payload:{response:res}});self.state.revert();view.applyState(self.state.current)})},this)};var node=view.node;var self=this;var callback=function(evt){evt.preventDefault();self.mutate(evt.target)};this.state=pw.state.init(node);if(node.tagName==="FORM"){node.addEventListener("submit",callback)}if(node.tagName==="INPUT"){if(node.type==="checkbox"){node.addEventListener("change",callback)}}node._hasEventListener=true;node.addEventListener("mutate",callback)});
